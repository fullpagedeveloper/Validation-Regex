apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.gms.google-services'

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "fullpagedeveloper.com.googleauthwithbackend"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix '-DEBUG'
            debuggable true
            signingConfig signingConfigs.debug
            //resValue("string", "app_name", "(Debug)")
        }
    }

    /*flavorDimensions "version"
    //ragam block produck
    //Namun, jika Anda ingin membuat versi lain aplikasi agar muncul sebagai listingan terpisah di Google Play Store,
    // seperti versi "gratis" dan "pro", Anda harus membuat varian build terpisah yang masing-masing memiliki ID aplikasi yang berbeda.
    productFlavors {
        String appName = "OKAY"
        free {
            //applicationIdSuffix ".free"
            applicationId "fullpagedeveloper.com.googleauthwithbackend.free.debug"
            versionNameSuffix "-free"
            //resValue("string", "app_name", appName + " (Debug)")
        }
        pro {
            dimension "version"
            //applicationIdSuffix ".pro"
            applicationId "fullpagedeveloper.com.googleauthwithbackend.pro"
            versionNameSuffix "-pro"
            //resValue("string", "app_name", appName)
        }
    }*/
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.firebase:firebase-auth:19.3.0'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //auth google
    implementation 'com.google.android.gms:play-services-auth:18.0.0'
    implementation 'com.google.android.material:material:1.1.0'

    //facebook
    implementation 'com.facebook.android:facebook-android-sdk:[4,5)'
}
